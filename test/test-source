#!/usr/bin/python
import argparse
import sys
import dbus

def main(options):
    if (options.address):
        bus = dbus.bus.BusConnection(options.address)
    else:
        bus = dbus.SystemBus()

    cmd = options.command
    cmd_value = options.value
    if (options.path):
        path = options.path
    else:
        path = "/"

    props = dbus.Interface(bus.get_object("br.org.cesar.modbus", path), "org.freedesktop.DBus.Properties")
    slave = dbus.Interface(bus.get_object("br.org.cesar.modbus", path), "br.org.cesar.modbus.Slave1")

    if (cmd == "info"):
        print (props.GetAll("br.org.cesar.modbus.Slave1"))
        return 0

    if (cmd == "add"):
            [name, typesource, addr, size] = cmd_value
            print ("Adding source:")
            print ("  Name:  %s" % name)
            print ("  Type:  %s" % typesource)
            print ("  Address:  %s" % addr)
            print ("  Size:  %s" % size)

            nameval = dbus.String(name)
            typeval = dbus.String(typesource)
            addrval = dbus.UInt16(addr)
            sizeval = dbus.UInt16(size)
            slave_dict = dict()
            slave_dict.update({"Name": nameval})
            slave_dict.update({"Type": typeval})
            slave_dict.update({"Address": addrval})
            slave_dict.update({"Size": sizeval})
            dbus_dict = dbus.Dictionary(slave_dict, signature='sv')
            print ("PATH: %s" % slave.AddSource(dbus_dict))
            return 0

    if (cmd == "remove"):
        [objpath] = cmd_value
        print ("Removing source %s" % objpath)
        devpath = dbus.ObjectPath(objpath)
        print (slave.RemoveSource(devpath))
        return 0

if __name__ == "__main__":

    parser = argparse.ArgumentParser(description='Test dbus source')
    parser.add_argument('-p', '--path', dest="path",
                        help="object path from slave", metavar="PATH")
    parser.add_argument('-a', '--dbus-address', dest="address", default="unix:path=/var/run/dbus/system_bus_address",
                    help="dbus address to connect with", metavar="ADDRESS")
    parser.add_argument('command', metavar='COMMAND', type=str, nargs='?',
                        choices=['info', 'add', 'remove', 'enable'],
                        help='Commands:\n \
                        info,\n \
                        add [Name] [Type] [Address] [Size]\n \
                        remove [slave path]')
    parser.add_argument('value', metavar='VALUE', nargs='*', help='value')

    options = parser.parse_args()
    ret = main(options)
    sys.exit(ret)
